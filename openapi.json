{
    "openapi": "3.0.0",
    "info": {
        "title": "Speedtest Tracker API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/results/latest": {
            "get": {
                "tags": [
                    "Results"
                ],
                "summary": "Fetch the single most recent result",
                "operationId": "getLatestResult",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Result"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthenticatedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No result found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/results": {
            "get": {
                "tags": [
                    "Results"
                ],
                "summary": "List results",
                "operationId": "listResults",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultsCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthenticatedError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/ookla/list-servers": {
            "get": {
                "tags": [
                    "Servers"
                ],
                "summary": "List available Ookla speedtest servers",
                "operationId": "listSpeedtestServers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServersCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthenticatedError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                },
                                "example": {
                                    "message": "You do not have permission to view speedtest servers."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/speedtests/run": {
            "post": {
                "tags": [
                    "Speedtests"
                ],
                "summary": "Run a new Ookla speedtest",
                "operationId": "runSpeedtest",
                "parameters": [
                    {
                        "name": "server_id",
                        "in": "query",
                        "description": "Optional Ookla speedtest server ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpeedtestRun"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthenticatedError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/results/{id}": {
            "get": {
                "tags": [
                    "Results"
                ],
                "summary": "Fetch a single result by ID",
                "operationId": "getResult",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the result",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResultResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthenticatedError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Result not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/stats": {
            "get": {
                "tags": [
                    "Stats"
                ],
                "summary": "Fetch aggregated Speedtest statistics",
                "description": "Handle the incoming request.",
                "operationId": "getStats",
                "parameters": [
                    {
                        "name": "start_at",
                        "in": "query",
                        "description": "ISOâ€‘8601 start datetime filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end_at",
                        "in": "query",
                        "description": "ISOâ€‘8601 end datetime filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Stats"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthenticatedError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/app/tokens": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "List API tokens",
                "description": "Retrieve all API tokens.",
                "operationId": "listTokens",
                "responses": {
                    "200": {
                        "description": "A list of active API tokens",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "List of API tokens",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ApiTokenList"
                                            }
                                        },
                                        "message": {
                                            "description": "Response status message",
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Issue a new API token",
                "description": "Generate a fresh API token with chosen scopes.",
                "operationId": "createToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "scopes"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Label for the token",
                                        "type": "string"
                                    },
                                    "scopes": {
                                        "description": "Permissions granted to this token",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "expires_at": {
                                        "description": "Optional expiration date (Y-m-d)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-18"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Token successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiTokenCreated"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/app/tokens/{id}": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Edit an existing API token",
                "description": "Update the scopes and optional expiration date for an API token.",
                "operationId": "editToken",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the token to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "scopes"
                                ],
                                "properties": {
                                    "scopes": {
                                        "description": "New permissions for the token",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "expires_at": {
                                        "description": "Optional new expiration date (Y-m-d)",
                                        "type": "string",
                                        "format": "date",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token scopes updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiTokenEdit"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Token not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Revoke an existing API token",
                "description": "Delete an API token by its ID.",
                "operationId": "revokeToken",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the token to revoke",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token revoked successfully",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Token revoked."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Token not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApiTokenCreated": {
                "description": "Response returned when a new API token is issued",
                "properties": {
                    "token": {
                        "description": "The issued API token string",
                        "type": "string"
                    },
                    "scopes": {
                        "description": "List of permissions granted to this token",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "expires_at": {
                        "description": "Timestamp when the token expires",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ApiTokenEdit": {
                "description": "Response returned when an API token is edited",
                "properties": {
                    "data": {
                        "description": "Updated API token entry",
                        "properties": {
                            "id": {
                                "description": "Token database ID",
                                "type": "integer"
                            },
                            "name": {
                                "description": "User-assigned name for this token",
                                "type": "string"
                            },
                            "scopes": {
                                "description": "Permissions granted to this token",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "expires_at": {
                                "description": "Expiration timestamp or null if none",
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "message": {
                        "type": "string",
                        "example": "Token scopes updated."
                    }
                },
                "type": "object"
            },
            "ApiTokenList": {
                "description": "An API token entry",
                "properties": {
                    "id": {
                        "description": "Token database ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "User-assigned name for this token",
                        "type": "string"
                    },
                    "scopes": {
                        "description": "Permissions granted to this token",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "expires_at": {
                        "description": "Expiration timestamp or null if none",
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ForbiddenError": {
                "description": "Forbidden error response when user lacks permission",
                "properties": {
                    "message": {
                        "description": "Error message indicating lack of permission",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NotFoundError": {
                "description": "Error when a requested when the reqeusted data is not found",
                "properties": {
                    "message": {
                        "description": "Not found error message",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ResultResponse": {
                "description": "Response for an Single Speedtest result entry",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Result"
                    },
                    "message": {
                        "description": "Response status message",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Result": {
                "description": "Speedtest result entry",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "service": {
                        "type": "string"
                    },
                    "ping": {
                        "type": "number"
                    },
                    "download": {
                        "type": "integer"
                    },
                    "upload": {
                        "type": "integer"
                    },
                    "download_bits": {
                        "type": "integer"
                    },
                    "upload_bits": {
                        "type": "integer"
                    },
                    "download_bits_human": {
                        "type": "string"
                    },
                    "upload_bits_human": {
                        "type": "string"
                    },
                    "benchmarks": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "nullable": true
                    },
                    "healthy": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "scheduled": {
                        "type": "boolean"
                    },
                    "comments": {
                        "type": "string",
                        "nullable": true
                    },
                    "data": {
                        "description": "Nested speedtest data payload",
                        "properties": {
                            "isp": {
                                "type": "string"
                            },
                            "ping": {
                                "properties": {
                                    "low": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "high": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "jitter": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "latency": {
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            },
                            "type": {
                                "type": "string"
                            },
                            "result": {
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "uri"
                                    },
                                    "persisted": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "server": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "ip": {
                                        "type": "string",
                                        "format": "ipv4"
                                    },
                                    "host": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "integer"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "location": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "upload": {
                                "properties": {
                                    "bytes": {
                                        "type": "integer"
                                    },
                                    "elapsed": {
                                        "type": "integer"
                                    },
                                    "latency": {
                                        "properties": {
                                            "iqm": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "low": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "high": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "jitter": {
                                                "type": "number",
                                                "format": "float"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "bandwidth": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "download": {
                                "properties": {
                                    "bytes": {
                                        "type": "integer"
                                    },
                                    "elapsed": {
                                        "type": "integer"
                                    },
                                    "latency": {
                                        "properties": {
                                            "iqm": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "low": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "high": {
                                                "type": "number",
                                                "format": "float"
                                            },
                                            "jitter": {
                                                "type": "number",
                                                "format": "float"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "bandwidth": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "interface": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "isVpn": {
                                        "type": "boolean"
                                    },
                                    "macAddr": {
                                        "type": "string",
                                        "pattern": "^([0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}$"
                                    },
                                    "externalIp": {
                                        "type": "string",
                                        "format": "ipv4"
                                    },
                                    "internalIp": {
                                        "type": "string",
                                        "format": "ipv4"
                                    }
                                },
                                "type": "object"
                            },
                            "timestamp": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "packetLoss": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "ResultsCollection": {
                "description": "Paginated list of Speedtest results",
                "properties": {
                    "data": {
                        "description": "Array of result objects",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Result"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string"
                            },
                            "last": {
                                "type": "string"
                            },
                            "prev": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object",
                        "additionalProperties": false
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer"
                            },
                            "from": {
                                "type": "integer"
                            },
                            "last_page": {
                                "type": "integer"
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "label": {
                                            "type": "string"
                                        },
                                        "active": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                }
                            },
                            "path": {
                                "type": "string"
                            },
                            "per_page": {
                                "type": "integer"
                            },
                            "to": {
                                "type": "integer"
                            },
                            "total": {
                                "type": "integer"
                            }
                        },
                        "type": "object",
                        "additionalProperties": false
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "ServersCollection": {
                "description": "Mapping of server IDs to display names",
                "properties": {
                    "data": {
                        "description": "Map of server ID to display name",
                        "type": "object",
                        "example": {
                            "data": {
                                "12345": "Fibernet (New York, 12345)"
                            }
                        }
                    },
                    "message": {
                        "description": "Response status message",
                        "type": "string"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "SpeedtestRun": {
                "description": "A queued speedtest result",
                "properties": {
                    "data": {
                        "description": "Queued speedtest result payload",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "service": {
                                "type": "string"
                            },
                            "ping": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                            },
                            "download": {
                                "type": "integer",
                                "nullable": true
                            },
                            "upload": {
                                "type": "integer",
                                "nullable": true
                            },
                            "benchmarks": {
                                "type": "object",
                                "nullable": true
                            },
                            "healthy": {
                                "type": "boolean",
                                "nullable": true
                            },
                            "status": {
                                "type": "string"
                            },
                            "scheduled": {
                                "type": "boolean"
                            },
                            "comments": {
                                "type": "string",
                                "nullable": true
                            },
                            "data": {
                                "description": "Additional data for queued result",
                                "properties": {
                                    "server": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "nullable": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object",
                        "additionalProperties": false
                    },
                    "message": {
                        "description": "Response status message",
                        "type": "string"
                    }
                },
                "type": "object",
                "additionalProperties": false
            },
            "Stats": {
                "description": "Aggregated speedtest statistics",
                "properties": {
                    "total_results": {
                        "type": "integer"
                    },
                    "avg_ping": {
                        "type": "number",
                        "format": "float"
                    },
                    "avg_download": {
                        "type": "number",
                        "format": "float"
                    },
                    "avg_upload": {
                        "type": "number",
                        "format": "float"
                    },
                    "min_ping": {
                        "type": "number",
                        "format": "float"
                    },
                    "min_download": {
                        "type": "number",
                        "format": "float"
                    },
                    "min_upload": {
                        "type": "number",
                        "format": "float"
                    },
                    "max_ping": {
                        "type": "number",
                        "format": "float"
                    },
                    "max_download": {
                        "type": "number",
                        "format": "float"
                    },
                    "max_upload": {
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "UnauthenticatedError": {
                "description": "Error when user is not authenticated",
                "properties": {
                    "message": {
                        "description": "Unauthenticated error message",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "description": "Validation failed due to invalid data in the reqeust",
                "properties": {
                    "message": {
                        "description": "Validation failed due to invalid data in the reqeust",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "Accept": {
                "name": "Accept",
                "in": "header",
                "description": "Expected response format",
                "required": true,
                "schema": {
                    "type": "string",
                    "default": "application/json"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Results",
            "description": "Operations related to Speedtest results.\nRequires an API token with scope `results:read`."
        },
        {
            "name": "Speedtests",
            "description": "Operations to run speedtests.\nRequires an API token with scope `speedtests:run`."
        },
        {
            "name": "Servers",
            "description": "Operations for speedtest servers.\nRequires an API token with scope `ookla:list-servers`."
        },
        {
            "name": "Stats",
            "description": "Operations for statistics.\nRequires an API token with scope `results:read`."
        },
        {
            "name": "Authentication",
            "description": "Operations for issuing, listing, and revoking API tokens\nRequires an API token with scope `token:read` or `token:write`."
        }
    ]
}